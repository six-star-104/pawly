spring:
  application:
    name: pawly
  servlet:
    multipart:
      max-request-size: 50MB
      max-file-size: 50MB
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DBNAME}?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
  jpa:
    properties:
      hibernate.format_sql: true
      dialect: org.hibernate.dialect.MySQL8InnoDBDialect
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      username: ${REDIS_USERNAME}
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REDIRECT_URI}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            client-name: Kakao
            scope:
              - profile_nickname
              - account_email
          google:
            clientId: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT_URI}
            client-name: Google
            scope: profile, email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  mvc:
    async:
      request-timeout: 300000

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.web.servlet: DEBUG
    org.springframework.web.client.RestTemplate: DEBUG

frontend:
  url: ${FRONT_DOMAIN}

oauth2:
  baseUrl: ${OAUTH2_DOMAIN}

cors:
  allowed-origin: http://localhost:8080, http://localhost:3000, http://127.0.0.1:3000, http://localhost:5173, https://k11d104.p.ssafy.io, https://pawly.o-r.kr
  allowed-methods: '*'

jwt:
  access-secret: ${JWT_SECRET}
  access-expiration: ${JWT_ACCESS_TOKEN_EXPIRATION:604800000} # 7일
  refresh-expiration: ${JWT_REFRESH_TOKEN_EXPIRATION:1209600000} # 1,209,600,000 ms = 14일
  oauth-expiration: ${JWT_REFRESH_TOKEN_EXPIRATION:600000} # 10분

cloud:
  aws:
    s3:
      bucketName: ${S3_BUCKET_NAME}
      path:
        asset: asset/
        letter: letter/
    credentials:
      accessKey: ${S3_ACCESS_KEY}
      secretKey: ${S3_SECRET_KEY}
    region.static: ap-northeast-2
    stack.auto: false

flask:
  url: ${FLASK_DOMAIN}